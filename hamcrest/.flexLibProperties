<?xml version="1.0" encoding="UTF-8"?>
<flexLibProperties version="1">
<includeClasses>
<classEntry path="org.hamcrest.number.greaterThan"/>
<classEntry path="org.hamcrest.core.describedAs"/>
<classEntry path="org.hamcrest.core.allOf"/>
<classEntry path="org.hamcrest.NullDescription"/>
<classEntry path="org.hamcrest.SelfDescribing"/>
<classEntry path="org.hamcrest.Matcher"/>
<classEntry path="org.hamcrest.core.anyOf"/>
<classEntry path="org.hamcrest.core.ShortcutCombinationMatcher"/>
<classEntry path="org.hamcrest.object.IsSameMatcher"/>
<classEntry path="org.hamcrest.number.closeTo"/>
<classEntry path="org.hamcrest.text.startsWith"/>
<classEntry path="org.hamcrest.collection.array"/>
<classEntry path="org.hamcrest.text.containsString"/>
<classEntry path="org.hamcrest.object.equalTo"/>
<classEntry path="org.hamcrest.core.IsNotMatcher"/>
<classEntry path="org.hamcrest.collection.IsArrayContainingMatcher"/>
<classEntry path="org.hamcrest.text.StringStartsWithMatcher"/>
<classEntry path="org.hamcrest.text.StringEndsWithMatcher"/>
<classEntry path="org.hamcrest.object.sameInstance"/>
<classEntry path="org.hamcrest.BaseDescription"/>
<classEntry path="org.hamcrest.core.anything"/>
<classEntry path="org.hamcrest.collection.hasItem"/>
<classEntry path="org.hamcrest.assertThatBoolean"/>
<classEntry path="org.hamcrest.core.IsMatcher"/>
<classEntry path="org.hamcrest.core.AnyOfMatcher"/>
<classEntry path="org.hamcrest.object.IsEqualMatcher"/>
<classEntry path="org.hamcrest.number.lessThan"/>
<classEntry path="org.hamcrest.core.DescribedAsMatcher"/>
<classEntry path="org.hamcrest.number.greaterThanOrEqualTo"/>
<classEntry path="org.hamcrest.collection.hasItems"/>
<classEntry path="org.hamcrest.collection.IsArrayWithSizeMatcher"/>
<classEntry path="org.hamcrest.number.between"/>
<classEntry path="org.hamcrest.core.not"/>
<classEntry path="org.hamcrest.collection.EveryMatcher"/>
<classEntry path="org.hamcrest.number.IsLessThanMatcher"/>
<classEntry path="org.hamcrest.core.ThrowsMatcher"/>
<classEntry path="org.hamcrest.AssertionError"/>
<classEntry path="org.hamcrest.number.lessThanOrEqualTo"/>
<classEntry path="org.hamcrest.core.isA"/>
<classEntry path="org.hamcrest.text.StringContainsMatcher"/>
<classEntry path="org.hamcrest.DiagnosingMatcher"/>
<classEntry path="org.hamcrest.object.IsInstanceOfMatcher"/>
<classEntry path="org.hamcrest.collection.emptyArray"/>
<classEntry path="org.hamcrest.number.IsCloseToMatcher"/>
<classEntry path="org.hamcrest.Description"/>
<classEntry path="org.hamcrest.collection.arrayWithSize"/>
<classEntry path="org.hamcrest.object.instanceOf"/>
<classEntry path="org.hamcrest.assertThat"/>
<classEntry path="org.hamcrest.core.AllOfMatcher"/>
<classEntry path="org.hamcrest.CustomTypeSafeMatcher"/>
<classEntry path="org.hamcrest.text.endsWith"/>
<classEntry path="org.hamcrest.object.nullValue"/>
<classEntry path="org.hamcrest.BaseMatcher"/>
<classEntry path="org.hamcrest.collection.everyItem"/>
<classEntry path="org.hamcrest.collection.IsArrayMatcher"/>
<classEntry path="org.hamcrest.TypeSafeDiagnosingMatcher"/>
<classEntry path="org.hamcrest.StringDescription"/>
<classEntry path="org.hamcrest.assertThatMatcher"/>
<classEntry path="org.hamcrest.CustomMatcher"/>
<classEntry path="org.hamcrest.text.SubstringMatcher"/>
<classEntry path="org.hamcrest.TypeSafeMatcher"/>
<classEntry path="org.hamcrest.core.IsAnythingMatcher"/>
<classEntry path="org.hamcrest.number.IsGreaterThanMatcher"/>
<classEntry path="org.hamcrest.core.throws"/>
</includeClasses>
<includeResources/>
<namespaceManifests/>
</flexLibProperties>
